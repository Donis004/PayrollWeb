@model Empleado

@{
    ViewData["Title"] = "Agregar Empleado";
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger alert-delete-later">
        @TempData["Error"]
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success alert-delete-later">
        @TempData["Success"]
    </div>
}

<h2>Agregar Empleado</h2>

<form action="/Empleado/CrearEmpleado" method="post" id="formAgregarEmpleado">
    
    <input type="hidden" name="Estado" value="Inactivo"/>
    <div>
        <label for="Dui">DUI:</label>
        <input value="@Model.Dui" type="text" id="Dui" name="Dui" required maxlength="10" oninput="formatearDUI(this)" pattern="[0-9]{8}-[0-9]{1}" />
        @if (ViewData.ModelState["Dui"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Dui"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="Nombre">Nombre:</label>
        <input value="@Model.Nombre" type="text" id="Nombre" name="Nombre" required />
        @if (ViewData.ModelState["Nombre"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Nombre"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="Apellidos">Apellidos:</label>
        <input value="@Model.Apellidos" type=" text" id="Apellidos" name="Apellidos" required />
        @if (ViewData.ModelState["Apellidos"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Apellidos"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="Telefono">Teléfono:</label>
        <input value="@Model.Telefono" type="text" id="Telefono" name="Telefono" required maxlength="9" oninput="formatearTelefono(this)" pattern="[0-9]{4}-[0-9]{4}" />
    </div>

    <div>
        <label for="Direccion">Dirección:</label>
        <input value="@Model.Direccion" type="text" id="Direccion" name="Direccion" required />
        @if (ViewData.ModelState["Direccion"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Direccion"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="CuentaCorriente">Cuenta Corriente:</label>
        <input value="@Model.CuentaCorriente" type="text" id="CuentaCorriente" name="CuentaCorriente" required maxlength="12" oninput="formatearCuentaCorriente(this)" pattern="[0-9]{12}" />
        @if (ViewData.ModelState["CuentaCorriente"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["CuentaCorriente"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="Correo">Correo:</label>
        <input value="@Model.Correo" type="email" id="Correo" name="Correo" required />
        @if (ViewData.ModelState["Correo"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Correo"]?.Errors[0]?.ErrorMessage</span>
        }
    </div>

    <div>
        <label for="Contrasena">Contraseña:</label>
        <input type="password" id="Contrasena" name="Contrasena" required />
        <a id="togglePassword" href="#"><i class="bi bi-eye"></i></a>
        @if (ViewData.ModelState["Contrasena"]?.Errors.Count > 0)
        {
            <span style="color:red;">@ViewData.ModelState["Contrasena"]?.Errors[0]?.ErrorMessage</span>
        }
        <button type="button" id="btnGenerarContrasena">Generar Contraseña</button>
    </div>

    <button type="submit">Guardar</button>
</form>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function() {
        $("#btnGenerarContrasena").click(function() {
            $.ajax({
                url: '/Empleado/GenerarContrasena', // Ruta al método del controlador
                type: 'GET',
                success: function(data) {
                    // Actualizar el valor del campo de contraseña con la nueva contraseña generada
                    $('#Contrasena').val(data);
                },
                error: function() {
                    alert('Hubo un error al generar la contraseña');
                }
            });
        });
    });

        document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordField = document.getElementById('Contrasena');
        // Cambiar el tipo del input entre password y text
        const type = passwordField.type === 'password' ? 'text' : 'password';
        passwordField.type = type;
    });

        function formatearDUI(input) {
        let value = input.value.replace(/\D/g, '');
        if (value.length > 8) {
            value = value.substring(0, 8) + '-' + value.substring(8, 9);
        }
        input.value = value.substring(0, 10);
    }

    function formatearTelefono(input) {
        let value = input.value.replace(/\D/g, '');
        if (value.length > 4) {
            value = value.substring(0, 4) + '-' + value.substring(4, 8);
        }
        input.value = value.substring(0, 9);
    }

    function formatearCuentaCorriente(input) {
        let value = input.value.replace(/\D/g, '');
        input.value = value.substring(0, 12);
    }

    setTimeout(function() {
            // Seleccionamos todos los elementos con la clase 'alert-delete-later'
            var alertElements = document.querySelectorAll('.alert-delete-later');
            alertElements.forEach(function(alert) {
                alert.remove();  // Eliminamos cada mensaje de la lista
            });
        }, 3000); // 3000 ms = 3 segundos
</script>
